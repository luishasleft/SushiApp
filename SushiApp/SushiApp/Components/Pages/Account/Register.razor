@page "/register"
@using SushiApp.Models.ViewModels
@using SushiApp.Models.Entities
@using System.ComponentModel.DataAnnotations
@using Microsoft.EntityFrameworkCore
@inject SushiDbContext dbContext
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border border-5">
        <EditForm Model="@Model" OnValidSubmit="OnValidSubmit" FormName="RegisterForm">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center">
                <h3>Registrazione</h3>
            </div>
            <div class="mb-3">
                <label>Username</label>
                <InputText @bind-Value="Model.UserName" class="form-control" placeholder="Username" />
                <ValidationMessage For="() => Model.UserName" />
            </div>
            <div class="mb-3">
                <label>Password</label>
                <InputText @bind-Value="Model.Password" class="form-control" placeholder="Password" type="password" />
                <ValidationMessage For="() => Model.Password" />
            </div>
            <div class="mb-3 text-center">
                <span class="text-danger">@errorMessage</span>
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Registrati</button>
            </div>
            <div class="text-center">
                <span>Hai già un account? <a href="/login">Login</a></span>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm] 
    public RegisterViewModel Model { get; set; } = new();

    private string? errorMessage;
    
    private async Task OnValidSubmit()
    {
        var existingUser = dbContext.UserAccounts.FirstOrDefault(x => x.UserName == Model.UserName);
        if (existingUser != null)
        {
            errorMessage = "Nome utente già in uso";
            return;
        }
        

        var newUser = new UserAccount
        {
            UserName = Model.UserName,
            Password = Model.Password,
            Role = "User" 
        };

        dbContext.UserAccounts.Add(newUser);
        await dbContext.SaveChangesAsync();
        
        NavigationManager.NavigateTo("/login");
    }
}
